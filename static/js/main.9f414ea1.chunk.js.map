{"version":3,"sources":["components/Card.js","components/CatDetail.js","components/Header.js","components/CatList.js","components/App.js","serviceWorker.js","index.js"],"names":["Card","props","react_default","a","createElement","className","children","CatDetail","handleClick","data","id","_this","fact","url","fav","singleView","favorite","favorites","components_Card","this","src","alt","onClick","style","float","Component","Header","goToFavorites","callbackfunctionParent","sort","goToHome","type","masonryOptions","transitionDuration","CatList","state","cats","temp","fView","favoritesCallback","arr","Object","toConsumableArray","concat","newArr","i","length","setState","console","log","headerCallback","b","split_a","split","a_word","toLowerCase","split_b","b_word","alert","_this2","axios","all","get","then","spread","catRes","factRes","catData","convert","xml2js","compact","spaces","response","images","image","factData","obj","_text","push","_this3","map","cat","index","components_CatDetail","key","components_Header","lib_default","options","disableImagesLoaded","updateOnEachImageLoad","renderList","App","components_CatList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f414ea1.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = (props) => {\n    return (\n        <div className=\"Card\"> \n            {props.children}\n        </div>\n    );\n}\n\nexport default Card;","import React, { Component } from 'react';\n\nimport Card from './Card';\n// import Section from './Section';\n\n\nclass CatDetail extends Component \n{\n  \n  handleClick = () => {\n    const data = {\n      id: this.props.id,\n      fact: this.props.fact,\n      url: this.props.url,\n      fav: this.props.fav\n    };\n    this.props.singleView(data);\n  }\n  favorite = () => {\n\n    if (!this.props.fav) {\n      const data = {\n        id: this.props.id,\n        fact: this.props.fact,\n        url: this.props.url,\n        fav: true\n      };\n      this.props.favorites(data);\n    } \n  }\n\n  render() {\n    return (\n      <Card>\n        <div className=\"pin-text\">\n          {this.props.fact}\n        </div>\n        <div className=\"pin-image\">\n          <img src={this.props.url} alt=\"Cat\" />\n        </div> \n        <div>\n          <button onClick={this.handleClick} style={{float: \"left\"}}> View </button>\n          <button onClick={this.favorite} style={{float: \"right\"}}>\n            {this.props.fav ?\n              <i className=\"fas fa-star\"></i>\n            :\n              <i className=\"far fa-star\"></i>\n            }\n          </button>\n        </div>\n      </Card>\n    );\n  }\n}\n\n\n\nexport default CatDetail;","import React, { Component } from 'react';\n\nimport '../styles/Header.css';\n\nclass Header extends Component {\n\n  goToFavorites = () => {\n    this.props.callbackfunctionParent(\"favorites\");\n  }\n  sort = () => {\n    this.props.callbackfunctionParent(\"sort\");\n  }\n\n  goToHome = () => {\n    this.props.callbackfunctionParent(\"home\");\n  }\n\n  render () {\n    return (\n      <div className=\"header\">\n        <div className=\"button-container\">\n          <div className=\"wrapper\">\n            <button onClick={this.sort} type=\"button\"> Sort </button> \n          </div>\n          <div className=\"wrapper\">\n            <button onClick={this.goToFavorites} type=\"button\"> Favorites </button>\n          </div>\n          <div className=\"wrapper\">\n            <button onClick={this.goToHome} type=\"button\"> Home </button>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-component';\nimport convert from 'xml-js';\n\nimport CatDetail from './CatDetail';\nimport Header from './Header';\n\n\nconst masonryOptions = {\n  transitionDuration: 0\n};\n\n\nclass CatList extends Component {\n\n  state = {\n    cats: [],\n    temp: [],\n    fav: [],\n    fView: false\n  }\n\n\n  componentWillMount() {\n\n    axios.all([\n      axios.get('https://cors-anywhere.herokuapp.com/http://thecatapi.com/api/images/get?format=xml&results_per_page=25'),\n      axios.get('https://cors-anywhere.herokuapp.com/https://catfact.ninja/facts?limit=25')\n    ])\n    .then(axios.spread((catRes, factRes) => {\n\n      /* cat response */\n      const js_xml = convert.xml2js(catRes.data, {compact: true, spaces: 4});\n\n      const catData = js_xml.response.data.images.image;\n\n      /* fact response */\n      const factData = factRes.data.data;\n      \n\n      const arr = [];\n       for ( var i = 0; i < catData.length; i++) {\n          const obj = {\n            id: catData[i].id._text,\n            url: catData[i].url._text,\n            fact: factData[i].fact,\n            fav: false\n          }\n          arr.push(obj);\n       }\n\n      this.setState({ cats: arr });\n    }));\n  }\n\n  favoritesCallback = (data) => {\n    const { cats } = this.state;\n    const arr = [...this.state.fav, data]\n    const newArr = cats;\n\n    for (var i = 0; i < cats.length; i++){\n      if (data.id === newArr[i].id)\n          newArr[i] = data;\n    }\n    this.setState({cats: newArr}, function(){\n      console.log(cats);\n    });\n\n    this.setState({fav: arr});\n  }\n\n  singleView = (data) => {\n    /* not from favs view */\n    if (this.state.cats.length > 1 && !this.state.fView) {\n      const arr = [data];\n      const temp = this.state.cats;\n      this.setState({temp});\n      this.setState({cats: arr});\n    }\n    /* from favs view */\n    if (this.state.cats.length > 1 && this.state.fView) {\n      const arr = [data];\n      this.setState({cats: arr});\n      this.setState({fView: false});\n    }\n  }\n\n  /* callback function from header */\n\n  headerCallback = (data) => {\n     /* sort cards by last letter in fact */\n    console.log(data);\n    if (data === \"sort\"){\n      const newArr = [...this.state.cats];\n\n      newArr.sort(function (a, b){\n        /* get last word a */\n        const split_a = a.fact.split(\" \");\n        const a_word = split_a[split_a.length - 1].toLowerCase();\n        /* get last word b */\n        const split_b = b.fact.split(\" \");\n        const b_word = split_b[split_b.length - 1].toLowerCase();\n        \n        if (a_word < b_word) \n          return -1;\n        if (a_word > b_word)\n          return 1;\n        \n        return 0;\n      })\n      this.setState({cats: newArr});\n\n    }\n    if (data === \"favorites\"){\n      /* render favorites */ \n      if (this.state.fav.length < 1 ) {\n        alert(\"You don't have any favorites!\");\n      } \n      if (this.state.fav.length >= 1 && this.state.cats.length > 1) {\n        const temp = this.state.cats;\n        this.setState({temp});\n        this.setState({cats: this.state.fav});\n        this.setState({fView: true});\n      } \n      if (this.state.fav.length >=1 && this.state.cats.length === 1) {\n        this.setState({cats: this.state.fav});\n        this.setState({fView: true});\n      }\n\n    }\n    if (data === \"home\" && this.state.temp.length > 0) {\n      /* check if we are on favorites */\n      if (this.state.fView) {\n        this.setState({fView: false});\n      }\n      const temp = this.state.temp;\n      this.setState({cats: temp});\n    }\n    \n  }\n\n\n\n  renderList() {\n    const { cats } = this.state;\n\n    if (cats.length > 0)\n    {\n      \n      return cats.map((cat,index) => \n        <CatDetail \n        key={cat.id} \n        id={cat.id} \n        url={cat.url}  \n        fact={cat.fact}\n        fav={cat.fav}\n        favorites={this.favoritesCallback} \n        singleView={this.singleView}/>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n          <Header callbackfunctionParent={this.headerCallback}/>\n              <Masonry\n                className={'row'}\n                options={masonryOptions} \n                disableImagesLoaded={false} \n                updateOnEachImageLoad={false} \n                >\n                {this.renderList()}\n              </Masonry>\n      </div>\n    );\n  }\n\n\n}\n\nexport default CatList;\n","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport CatList from './CatList';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <CatList />\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}